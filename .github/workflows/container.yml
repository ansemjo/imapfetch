name: container

on:
  push:
    branches: [ master, main, devel ]
  pull_request:
    types: [ assigned, opened, synchronize, reopened ]
  schedule:
    - cron: "0 14 * * 1"

env:
  PLATFORMS: ${{ fromJSON('[ "linux/amd64", "linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6,linux/ppc64le" ]')[ github.event_name != 'pull_request' ] }}
  IMAGENAME: imapfetch
  #DOCKERHUB_USER
  #DOCKERHUB_TOKEN

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:

      - name: Prepare Tags
        id: prep
        shell: bash
        run: |
          TAGS=()
          case "${GITHUB_REF}" in
            # version releases
            refs/tags/*)
              VERSION="${GITHUB_REF#refs/tags/}"
              if [[ ${VERSION} =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
                V=("${BASH_REMATCH[@]}")
                TAGS+=("${{ env.IMAGENAME }}:${V[1]}" \
                       "${{ env.IMAGENAME }}:${V[1]}.${V[2]}" \
                       "${{ env.IMAGENAME }}:${V[1]}.${V[2]}.${V[3]}")
              else
                TAGS+=("${{ env.IMAGENAME }}:${VERSION}")
              fi
            ;&
            # branch heads (+ fallthorugh)
            refs/heads/*)
              TAGS+=("${{ env.IMAGENAME }}:latest")
              TAGS=$({ IFS=","; echo "${TAGS[*]/#/ghcr.io/${{ github.repository_owner }}/}","${TAGS[*]/#/docker.io/${{ secrets.DOCKERHUB_USER }}/}"; })
            ;;
            # pull requests
            refs/pull/*)
              TAGS=("${{ github.repository_owner }}/${{ env.IMAGENAME }}:pr-${{ github.event.number }}")
            ;;
          esac
          echo "TAGS ${TAGS}"
          echo "::set-output name=tags::${TAGS}"
          echo "::set-output name=head::${GITHUB_REF#refs/heads/}"
          echo "::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to Docker Hub
        uses: docker/login-action@v1.14.0
        if: ${{ github.event_name != 'pull_request' && steps.prep.outputs.head != 'devel' }}
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1.14.0
        if: ${{ github.event_name != 'pull_request' && steps.prep.outputs.head != 'devel' }}
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2.9.0
        with:
          platforms: ${{ env.PLATFORMS }}
          push: ${{ github.event_name != 'pull_request' && steps.prep.outputs.head != 'devel' }}
          tags: ${{ steps.prep.outputs.tags }}
          labels: |
            org.opencontainers.image.title=${{ github.event.repository.name }}
            org.opencontainers.image.description=${{ github.event.repository.description }}
            org.opencontainers.image.url=${{ github.event.repository.html_url }}
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.licenses=${{ github.event.repository.license.spdx_id }}

